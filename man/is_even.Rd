% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_even.R
\name{is_even}
\alias{is_even}
\alias{is_odd}
\title{Test whether numeric values are odd or even}
\usage{
is_even(x, require_int = FALSE)

is_odd(x, require_int = FALSE)
}
\arguments{
\item{x}{A vector of numeric values.}

\item{require_int}{\code{logical(1)}. When \code{TRUE}, an error is 
returned when any of the values is \code{x} is not an integer-like
value.  Otherwise, \code{FALSE} is returned for non-integer-like values.}
}
\value{
A logical vector the length of \code{x}
}
\description{
A number \code{x} is even if there exists some integer
  \code{k} such that \code{2 * k = x}. \code{is_odd(x)} is equivalent to 
  \code{!is_even(x)}
}
\section{Functional Requirements}{

\enumerate{
  \item Return a logical vector the same length as x.
  \item Cast an error when given a non-numeric vector.
  \item Cast an error when \code{x} is not a vector.
  \item An option is available to return an error if any values in \code{x}
        are not integer-like values.
}
}
\examples{
is_even(1:10)

# Non integer-like values
is_even(1:10 + .15)

is_even(1:10, require_int = TRUE)

\dontrun{
# Return an error if x contains non-integer-like values
is_even(1:10 + 0.15, require_int = TRUE)
}

is_odd(1:10)

}
\seealso{
\code{\link{Arithmetic}}
}

