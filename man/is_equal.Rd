% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_equal.R
\name{is_equal}
\alias{is_equal}
\title{Vectorized Equality Comparison}
\usage{
is_equal(x, y, compare_na = FALSE, use_names = TRUE)
}
\arguments{
\item{x}{A vector. must have the same length as \code{y}}

\item{y}{A vector. Must have the same length as \code{x}}

\item{compare_na}{\code{logical(1)}. When \code{FALSE}, if either 
\code{x} or \code{y} is \code{NA}, the value returned is \code{NA}. If 
\code{TRUE}, a logical value will be returned indicating if both 
\code{x} and \code{y} are \code{NA}.}

\item{use_names}{\code{logical(1)}. If \code{x} and/or \code{y} have names,
the return value may be named. if \code{TRUE} names are preserved when
available, otherwise they are suppressed.  See the \code{USE.NAMES} 
argument in \code{\link{mapply}}.}
}
\value{
A logical vector the same length as \code{x}
}
\description{
A vectorized wrapper for \code{isTRUE(all.equal(x, y))} for
  comparing pairwise elements of two vectors for equality.
}
\section{Functional Requirements}{

\enumerate{
  \item Cast an error if either \code{x} or \code{y} are not vectors.
  \item Cast an error if \code{x} and \code{y} do not have the same length.
  \item Return a logical vector the same length of \code{x}
  \item Give control over how \code{NA} are handled.
  \item Cast a warning if \code{x} and \code{y} do not share a class
}
}
\examples{
is_equal(1:3, 1:3)

is_equal(c(1, 1, 2), 
         c(1, 2, 3))
         
is_equal(c(1, NA, 2),
         c(1, 3, 2))
         
is_equal(c(1, NA, 2),
         c(1, 3, 2),
         compare_na = TRUE)
         
is_equal(c(1, NA, 2),
         c(1, NA, 2))
         
is_equal(c(1, NA, 2),
         c(1, NA, 2),
         compare_na = TRUE)
         
}
\seealso{
\code{\link{all.equal}}, \code{\link{isTRUE}}, \code{\link{mapply}}
}

