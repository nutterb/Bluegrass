% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/password.R
\name{password}
\alias{password}
\title{Random Password Generation}
\usage{
password(n = 10, digits = TRUE, upperalpha = TRUE, loweralpha = TRUE,
  special = c("!", "@", "#", "$", "\%", "^", "&", "*", "?", "-", "+"),
  replace = TRUE, digit_first_allowed = TRUE, one_from_each = TRUE)
}
\arguments{
\item{n}{\code{numeric(1)}, number of characters in the desired password.}

\item{digits}{\code{logical(1)}, should the digits \code{0:9} be included
in the character pool?}

\item{upperalpha}{\code{logical(1)}, should the upper case alphabet 
\code{LETTERS} be included in the character pool.}

\item{loweralpha}{\code{logical(1)}, should the lower case alphabet
\code{letters} be included in the character pool.}

\item{special}{A character vector of special characters to include in the 
character pool.  If special characters should not be considered, provide
either \code{character(0)} or \code{NULL}.}

\item{replace}{\code{logical(1)}, should sampling from the character pool 
be done with replacement?}

\item{digit_first_allowed}{\code{logical(1)}, is it allowable for the first
character in the password to be a digit?}

\item{one_from_each}{\code{logical(1)}, is it mandatory that at least one 
from each character set be selected?}
}
\description{
Generates character strings for use as passwords.
}
\section{Functional Requirements}{

\enumerate{
  \item User may designate the length of the password.
  \item User may include or exclude digits from the character pool.
  \item User may include or exclude lower case letters from the character pool.
  \item User may include or exclude upper case letters from the character pool.
  \item User may designate which, if any, special character to include in the character pool.
  \item Sampling may be done with or without replacement.
  \item User may disallow the first character from being a digit
  \item The user may require that at least one character from each character set is included.
  \item The output is a \code{character(1)}
}
}

